{
  "interpreterSettings": {
    "python": {
      "id": "python",
      "name": "python",
      "group": "python",
      "properties": {
        "zeppelin.python": {
          "name": "zeppelin.python",
          "value": "python",
          "type": "string"
        },
        "zeppelin.ipython.launch.timeout": {
          "name": "zeppelin.ipython.launch.timeout",
          "value": "30000",
          "type": "number"
        },
        "zeppelin.python.useIPython": {
          "name": "zeppelin.python.useIPython",
          "value": true,
          "type": "checkbox"
        },
        "zeppelin.ipython.grpc.message_size": {
          "name": "zeppelin.ipython.grpc.message_size",
          "value": "33554432",
          "type": "number"
        },
        "zeppelin.python.maxResult": {
          "name": "zeppelin.python.maxResult",
          "value": "1000",
          "type": "number"
        }
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "python",
          "class": "org.apache.zeppelin.python.PythonInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "python",
            "editOnDblClick": false,
            "completionSupport": true
          }
        },
        {
          "name": "ipython",
          "class": "org.apache.zeppelin.python.IPythonInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "python",
            "editOnDblClick": false,
            "completionKey": "TAB",
            "completionSupport": true
          }
        },
        {
          "name": "sql",
          "class": "org.apache.zeppelin.python.PythonInterpreterPandasSql",
          "defaultInterpreter": false,
          "editor": {
            "language": "sql",
            "editOnDblClick": false,
            "completionKey": "TAB",
            "completionSupport": false
          }
        },
        {
          "name": "conda",
          "class": "org.apache.zeppelin.python.PythonCondaInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "sh",
            "editOnDblClick": false,
            "completionSupport": false
          }
        },
        {
          "name": "docker",
          "class": "org.apache.zeppelin.python.PythonDockerInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "sh",
            "editOnDblClick": false,
            "completionSupport": false
          }
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "isExistingProcess": false,
        "setPermission": false,
        "owners": [],
        "isUserImpersonate": false
      }
    },
    "spark": {
      "id": "spark",
      "name": "spark",
      "group": "spark",
      "properties": {
{%- if SPARK_MASTER %}
        "master": {
          "name": "master",
          "value": "{{ SPARK_MASTER }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_JARS %}
        "spark.jars": {
          "name": "spark.jars",
          "value": "{{ SPARK_JARS }}"
        },
{%- endif %}
{%- if SPARK_SUBMIT_DEPLOYMODE %}
        "spark.submit.deployMode": {
          "name": "spark.submit.deployMode",
          "value": "{{ SPARK_SUBMIT_DEPLOYMODE }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_APP_NAME %}
        "spark.app.name": {
          "name": "spark.app.name",
          "value": "{{ SPARK_APP_NAME }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_ARGS %}
        "args": {
          "name": "args",
          "value": "{{ SPARK_ARGS }}",
          "type": "textarea"
        },
{%- endif %}
{%- if SPARK_EXECUTOR_MEMORY %}
        "spark.executor.memory": {
          "name": "spark.executor.memory",
          "value": "{{ SPARK_EXECUTOR_MEMORY }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_EVENTLOG_ENABLED %}
        "spark.eventLog.enabled": {
          "name": "spark.eventLog.enabled",
          "value": "{{ SPARK_EVENTLOG_ENABLED }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_EVENTLOG_DIR %}
        "spark.eventLog.dir": {
          "name": "spark.eventLog.dir",
          "value": "{{ SPARK_EVENTLOG_DIR }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_CORES_MAX %}
        "spark.cores.max": {
          "name": "spark.cores.max",
          "value": "{{ SPARK_CORES_MAX }}",
          "type": "number"
        },
{%- endif %}
{%- if SPARK_SHUFFLE_SERVICE_ENABLED %}
        "spark.shuffle.service.enabled": {
          "name": "spark.shuffle.service.enabled",
          "value": "{{ SPARK_SHUFFLE_SERVICE_ENABLED }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_DYNAMICALLOCATION_ENABLED %}
        "spark.dynamicAllocation.enabled": {
          "name": "spark.dynamicAllocation.enabled",
          "value": "{{ SPARK_DYNAMICALLOCATION_ENABLED }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_DYNAMICALLOCATION_MAXEXECUTORS %}
        "spark.dynamicAllocation.maxExecutors": {
          "name": "spark.dynamicAllocation.maxExecutors",
          "value": "{{ SPARK_DYNAMICALLOCATION_MAXEXECUTORS }}",
          "type": "string"
        },
{%- endif %}
{%- if SPARK_DYNAMICALLOCATION_CACHEDEXECUTORIDLETIMEOUT %}
        "spark.dynamicAllocation.cachedExecutorIdleTimeout": {
          "name": "spark.dynamicAllocation.cachedExecutorIdleTimeout",
          "value": "{{ SPARK_DYNAMICALLOCATION_CACHEDEXECUTORIDLETIMEOUT }}",
          "type": "string"
        },
{%- endif %}
        "zeppelin.spark.sql.interpolation": {
          "name": "zeppelin.spark.sql.interpolation",
          "value": {{ ZEPPELIN_SPARK_SQL_INTERPOLATION | default(value='false') }},
          "type": "checkbox"
        },
        "zeppelin.spark.concurrentSQL": {
          "name": "zeppelin.spark.concurrentSQL",
          "value": {{ ZEPPELIN_SPARK_CONCURRENTSQL | default(value='false') }},
          "type": "checkbox"
        },
        "zeppelin.spark.importImplicit": {
          "name": "zeppelin.spark.importImplicit",
          "value": {{ ZEPPELIN_SPARK_IMPORTIMPLICIT | default(value='true') }},
          "type": "checkbox"
        },
        "zeppelin.dep.additionalRemoteRepository": {
          "name": "zeppelin.dep.additionalRemoteRepository",
          "value": "{{ ZEPPELIN_DEP_ADDITIONALREMOTEREPOSITORY | default(value='spark-packages,http://dl.bintray.com/spark-packages/maven,false;') }}",
          "type": "textarea"
        },
        "zeppelin.spark.maxResult": {
          "name": "zeppelin.spark.maxResult",
          "value": "{{ ZEPPELIN_SPARK_MAXRESULT | default(value='1000') }}",
          "type": "number"
        },
        "zeppelin.pyspark.python": {
          "name": "zeppelin.pyspark.python",
          "value": "{{ ZEPPELIN_PYSPARK_PYTHON | default(value='python') }}",
          "type": "string"
        },
        "zeppelin.spark.enableSupportedVersionCheck": {
          "name": "zeppelin.spark.enableSupportedVersionCheck",
          "value": {{ ZEPPELIN_SPARK_ENABLESUPPORTEDVERSIONCHECK | default(value='true') }},
          "type": "checkbox"
        },
        "zeppelin.spark.useNew": {
          "name": "zeppelin.spark.useNew",
          "value": {{ ZEPPELIN_SPARK_USENEW | default(value='true') }},
          "type": "checkbox"
        },
        "zeppelin.dep.localrepo": {
          "name": "zeppelin.dep.localrepo",
          "value": "{{ ZEPPELIN_DEP_LOCALREPO | default(value='local-repo') }}",
          "type": "string"
        },
        "zeppelin.pyspark.useIPython": {
          "name": "zeppelin.pyspark.useIPython",
          "value": {{ ZEPPELIN_PYSPARK_USEIPYTHON | default(value='true') }},
          "type": "checkbox"
        },
        "zeppelin.spark.sql.stacktrace": {
          "name": "zeppelin.spark.sql.stacktrace",
          "value": {{ ZEPPELIN_SPARK_SQL_STACKTRACE | default(value='false') }},
          "type": "checkbox"
        },
        "zeppelin.spark.useHiveContext": {
          "name": "zeppelin.spark.useHiveContext",
          "value": {{ ZEPPELIN_SPARK_USEHIVECONTEXT | default(value='true') }},
          "type": "checkbox"
        },
        "zeppelin.spark.uiWebUrl": {
          "name": "zeppelin.spark.uiWebUrl",
          "value": "{{ ZEPPELIN_SPARK_UIWEBURL | default(value='') }}",
          "type": "string"
        },
        "zeppelin.spark.printREPLOutput": {
          "name": "zeppelin.spark.printREPLOutput",
          "value": {{ ZEPPELIN_SPARK_PRINTREPLOUTPUT | default(value='true') }},
          "type": "checkbox"
        }
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "spark",
          "class": "org.apache.zeppelin.spark.SparkInterpreter",
          "defaultInterpreter": true,
          "editor": {
            "language": "scala",
            "editOnDblClick": false,
            "completionKey": "TAB",
            "completionSupport": {{ ZEPPELIN_SPARKINTERPRETER_COMPLETION_SUPPORT | default(value='false') }}
          }
        },
        {
          "name": "sql",
          "class": "org.apache.zeppelin.spark.SparkSqlInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "sql",
            "editOnDblClick": false,
            "completionKey": "TAB",
            "completionSupport": {{ ZEPPELIN_SPARKSQLINTERPRETER_COMPLETION_SUPPORT | default(value='false') }}
          }
        },
        {
          "name": "dep",
          "class": "org.apache.zeppelin.spark.DepInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "scala",
            "editOnDblClick": false,
            "completionKey": "TAB",
            "completionSupport": {{ ZEPPELIN_SPARKDEPINTERPRETER_COMPLETION_SUPPORT | default(value='false') }}
          }
        },
        {
          "name": "pyspark",
          "class": "org.apache.zeppelin.spark.PySparkInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "python",
            "editOnDblClick": false,
            "completionKey": "TAB",
            "completionSupport": {{ ZEPPELIN_PYSPARKINTERPRETER_COMPLETION_SUPPORT | default(value='false') }}
          }
        },
        {
          "name": "ipyspark",
          "class": "org.apache.zeppelin.spark.IPySparkInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "python",
            "editOnDblClick": false,
            "completionSupport": {{ ZEPPELIN_IPYSPARKINTERPRETER_COMPLETION_SUPPORT | default(value='false') }}
          }
        },
        {
          "name": "r",
          "class": "org.apache.zeppelin.spark.SparkRInterpreter",
          "defaultInterpreter": false,
          "editor": {
            "language": "r",
            "editOnDblClick": false,
            "completionSupport": {{ ZEPPELIN_SPARKRINTERPRETER_COMPLETION_SUPPORT | default(value='false') }}
          }
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNote": "{{ ZEPPELIN_SPARK_INTERPRETER_PER_NOTE | default(value='isolated') }}",
        "perUser": "{{ ZEPPELIN_SPARK_INTERPRETER_PER_USER | default(value='isolated') }}",
        "isExistingProcess": false,
        "setPermission": false,
        "owners": [],
        "isUserImpersonate": false
      }
    }
  },
  "interpreterBindings": {},
  "interpreterRepositories": [
    {
      "id": "central",
      "type": "default",
      "url": "http://repo1.maven.org/maven2/",
      "releasePolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "snapshotPolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "mirroredRepositories": [],
      "repositoryManager": false
    },
    {
      "id": "local",
      "type": "default",
      "url": "file:///root/.m2/repository",
      "releasePolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "snapshotPolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "mirroredRepositories": [],
      "repositoryManager": false
    }
  ]
}
