version: '1.0'
stages:
- clone
- misc
- build
- test
- push

# Requires SCALA_VERSION (just x.y) to be specified
steps:
  main_clone:
    title: Clone main repository
    type: git-clone
    stage: clone
    git: github
    repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    revision: ${{CF_REVISION}}

  extract_zeppelin_version:
    title: Extract Zeppelin x.y.z version
    stage: misc
    image: alpine:3.10
    commands:
    - apk add --no-cache curl
    - cf_export ZEPPELIN_VERSION="$(curl -sL "https://github.com/apache/zeppelin/raw/${ZEPPELIN_REV}/pom.xml" | grep "<name>Zeppelin</name>" -B1 | grep "<version>" | grep -oE "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+(-SNAPSHOT)?")"

  # Step cannot contain period for now
  # DO NOT push to the actual tag first, only push after PR is merged
  build_zeppelin:
    type: build
    stage: build
    title: Build image zeppelin
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    tag: test_${{ZEPPELIN_VERSION}}_spark-${{SPARK_VERSION}}_scala-${{SCALA_VERSION}}_hadoop-${{HADOOP_VERSION}}
    build_arguments:
    - ZEPPELIN_REV=${{ZEPPELIN_REV}}
    - SPARK_VERSION=${{SPARK_VERSION}}
    - SCALA_VERSION=${{SCALA_VERSION}}
    - HADOOP_VERSION=${{HADOOP_VERSION}}

  test_zeppelin:
    type: composition
    stage: test
    title: Test image zeppelin
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    composition:
      version: '2'
      services:
        zeppelin:
          image: ${{build_zeppelin}}
          ports:
          - 8080
    composition_candidates:
      tester:
        image: gempesaw/curl-jq:latest
        command: sh -c 'sleep 25 && [ "`curl -s http://zeppelin:8080/api/version | jq -r .status`" = "OK" ]'

  push_zeppelin:
    type: push
    stage: push
    title: Push image zeppelin
    candidate: ${{build_zeppelin}}
    tag: ${{ZEPPELIN_VERSION}}_spark-${{SPARK_VERSION}}_scala-${{SCALA_VERSION}}_hadoop-${{HADOOP_VERSION}}
    registry: cfcr
    when:
      branch:
        only:
        - master
